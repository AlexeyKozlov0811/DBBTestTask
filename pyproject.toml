[project]
name = "DBBTestTask"
version = "0.1"
description = "DBBTestTask web app"
authors = [
    "Oleksii Kozlov <alexeykozlov0811@gmail.com>",
]
maintainers = [
    "Oleksii Kozlov <alexeykozlov0811@gmail.com>",
]
readme = "README.md"
python = "^3.12"
repository = "https://github.com/AlexeyKozlov0811/DBBTestTask"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".git",
    ".ruff_cache",
    ".idea",
    ".pytest_cache",
    ".coverage",
]

line-length = 100

target-version = "py312"

[tool.ruff.lint]
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
    "C", # flake8-comprehensions
    "B", # flake8-bugbear
    "UP", # pyupgrade
    "T20", # flake8-print
    "S", # flake8-bandit
]

ignore = [
    "S101", # assert usage
    "S105", # don't search hardcoded passwords in tests
    "S106", # don't search hardcoded passwords in tests
    "S107", # don't search hardcoded passwords in tests
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "D202", # no-blank-line-after-function
    "C901", # complex-structure
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
# Avoid trying to fix flake8-bugbear (`B`) violations.
unfixable = ["B"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.lint.isort]
split-on-trailing-comma = false
combine-as-imports = true

[tool.ruff.lint.per-file-ignores]
"**/tests/**.py" = [
    "S105", # don't search hardcoded passwords in tests
    "S106", # don't search hardcoded passwords in tests
    "S107", # don't search hardcoded passwords in tests
    "S311", # Standard pseudo-random generators are not suitable for cryptographic purposes
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/settings/*",
    "*tests*",
    "*/logging.py",
]
